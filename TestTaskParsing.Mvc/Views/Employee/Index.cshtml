@model IEnumerable<Employee>

@{
    ViewData["Title"] = "Employee List";
}

<h1>@ViewData["Title"]</h1>

@if (TempData["Message"] != null)
{
    <div class="alert alert-info">
        @TempData["Message"]
    </div>
}

<form asp-action="Import" method="post" enctype="multipart/form-data">
    <input type="file" name="file" />
    <button type="submit" class="btn btn-outline-success mb-2">Import<i class="fa-solid fa-file-import ms-2"></i></button>
</form>

<form asp-action="Index" method="get" class="mb-3">
    <div class="input-group mb-3">
        <input type="text" name="searchString" class="form-control" placeholder="Search" />
        <input type="date" name="startDate" class="form-control" placeholder="Start Date" />
        <input type="date" name="endDate" class="form-control" placeholder="End Date" />
        <button type="submit" class="btn btn-primary">Search</button>
    </div>
</form>

    <table id="employeeTable" class="table table-success table-striped">
        <thead>
            <tr>
                <th data-sort="payrollNumber">Payroll Number</th>
                <th data-sort="foreName">ForeName</th>
                <th data-sort="surname">Surname</th>
                <th data-sort="dateOfBirth">DateOfBirth</th>
                <th data-sort="telephone">Telephone</th>
                <th data-sort="mobile">Mobile</th>
                <th data-sort="address">Address</th>
                <th data-sort="city">City</th>
                <th data-sort="postCode">PostCode</th>
                <th data-sort="email">Email</th>
                <th data-sort="startDate">StartDate</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var employee in Model)
            {
                <tr>
                    <td>@employee.PayrollNumber</td>
                    <td>@employee.ForeName</td>
                    <td>@employee.Surname</td>
                    <td>@employee.DateOfBirth.ToShortDateString()</td>
                    <td>@employee.Telephone</td>
                    <td>@employee.Mobile</td>
                    <td>@employee.Address</td>
                    <td>@employee.City</td>
                    <td>@employee.PostCode</td>
                    <td>@employee.EMailHome</td>
                    <td>@employee.StartDate.ToShortDateString()</td>
                    <td class="text-center">
                        <div class="w-75 btn-group" role="group">
                            <a asp-controller="Employee" asp-action="Edit" asp-route-id="@employee.Id" class="btn btn-success mx-1">
                                <i class="fa-solid fa-pen-to-square ms-2"></i>
                            </a>
                            <a asp-controller="Employee" asp-route-Id="@employee.Id" asp-action="Delete" class="btn btn-danger mx-2">
                                <i class="far fa-trash-alt"></i>
                            </a>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script>
    $(document).ready(function () {
        // Сортировка таблицы по клику на заголовок столбца
        $('th').on('click', function () {
            var table = $(this).parents('table');
            var rows = table.find('tbody tr').get();
            var index = $(this).index();
            var ascending = $(this).hasClass('ascending');

            rows.sort(function (a, b) {
                var keyA = $(a).children('td').eq(index).text();
                var keyB = $(b).children('td').eq(index).text();

                if ($.isNumeric(keyA)) {
                    keyA = parseFloat(keyA);
                    keyB = parseFloat(keyB);
                }

                if (keyA < keyB) {
                    return ascending ? -1 : 1;
                }
                if (keyA > keyB) {
                    return ascending ? 1 : -1;
                }
                return 0;
            });

            $.each(rows, function (index, row) {
                table.children('tbody').append(row);
            });

            // Toggle sorting direction
            $('th').removeClass('ascending descending');
            $(this).addClass(ascending ? 'descending' : 'ascending');
        });
    });
</script>

<style>
    th {
        cursor: pointer;
    }

        th.ascending::after {
            content: '▲';
        }

        th.descending::after {
            content: '▼';
        }
</style>